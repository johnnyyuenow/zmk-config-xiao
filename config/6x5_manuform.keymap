/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
 &lt 3 ESC         &kp N1            &kp N2     &kp N3   &kp N4    &kp N5    &kp N6    &kp N7     &kp N8            &kp N9         &kp N0       &kp GRAVE
   &kp TAB          &kp Q             &kp W      &kp E    &kp R     &kp T     &kp Y     &kp U      &kp I             &kp O          &kp P        &kp BSLH
 &kp LCTRL          &kp A             &kp S      &kp D    &kp F     &kp G     &kp H     &kp J      &kp K             &kp L       &kp SEMI  &mt RCTRL APOS
 &kp LSHFT        &lt 1 Z             &kp X      &kp C    &kp V   &lt 1 B   &lt 1 N     &kp M  &kp COMMA           &kp DOT    &lt 1 SLASH       &kp RSHFT
  &kp LALT  &kp LG(LS(S))  &kp LS(LC(LALT))  &kp SPACE  &kp DEL  &kp LWIN  &kp RWIN  &kp BSPC  &kp ENTER  &kp LS(LC(LALT))  &kp LC(LS(P))           &to 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        navigation {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  |
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |

            bindings = <
 &kp F11             &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6    &kp F7    &kp F8     &kp F9            &kp F10  &kp F12
  &trans   &kp C_AC_ZOOM_IN   &kp HOME     &kp UP    &kp END  &kp PG_UP  &kp PG_UP  &kp HOME    &kp UP    &kp END   &kp C_AC_ZOOM_IN   &trans
  &trans  &kp C_AC_ZOOM_OUT   &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_DN  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp C_AC_ZOOM_OUT   &trans
  &trans             &trans  &kp MINUS  &kp EQUAL     &trans     &trans     &trans    &trans  &kp LBKT   &kp RBKT             &trans   &trans
  &trans             &trans     &trans     &trans     &trans     &trans     &trans    &trans    &trans     &trans             &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Gaming {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |		             |  +   |   -   |   =   |  [   |   ]   |   \   |
            // |     |     |      |      |      |        |                   |       |      |       |       |      |       |

            bindings = <
   &kp ESC         &kp N1            &kp N2     &kp N3   &kp N4    &kp N5    &kp N6    &kp N7     &kp N8            &kp N9         &kp N0       &kp GRAVE
   &kp TAB          &kp Q             &kp W      &kp E    &kp R     &kp T     &kp Y     &kp U      &kp I             &kp O          &kp P        &kp BSLH
 &kp LCTRL          &kp A             &kp S      &kp D    &kp F     &kp G     &kp H     &kp J      &kp K             &kp L       &kp SEMI  &mt RCTRL APOS
 &kp LSHFT          &kp Z             &kp X      &kp C    &kp V     &kp B   &lt 1 N     &kp M  &kp COMMA           &kp DOT    &lt 1 SLASH       &kp RSHFT
  &kp LALT  &kp LG(LS(S))  &kp LS(LC(LALT))  &kp SPACE  &kp DEL  &kp LWIN  &kp RWIN  &kp BSPC  &kp ENTER  &kp LS(LC(LALT))  &kp LC(LS(P))           &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        keyboard {
            bindings = <
     &trans        &trans      &trans        &trans        &trans  &bootloader  &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans      &trans        &trans        &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans      &trans        &trans        &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans      &trans        &trans        &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &bt BT_PRV  &bt BT_SEL 2  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_NXT  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
